(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _iosVhFix = require("./utils/ios-vh-fix");
var _swiperHero = require("./modules/swiper-hero/swiper-hero");
require("./modules/youtube-video/youtube-video");
require("./modules/nav-toggle/nav-toggle");
var _swiperTours = require("./modules/swiper-tours/swiper-tours");
var _swiperTraining = require("./modules/swiper-training/swiper-training");
var _swiperReviews = require("./modules/swiper-reviews/swiper-reviews");
var _swiperAdvantages = require("./modules/swiper-advantages/swiper-advantages");
var _swiperGallery = require("./modules/swiper-gallery/swiper-gallery");
var _inputValidate = require("./modules/input-validate/input-validate");
require("./modules/leaflet/leaflet");
require("./modules/scroll/scroll");
// import {initLeaflet} from './modules/leaflet/leaflet';

// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  (0, _swiperHero.initHeroSwiper)();

  // Utils
  // ---------------------------------

  (0, _iosVhFix.iosVhFix)();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    (0, _swiperTours.initToursSwiper)();
    (0, _swiperTraining.initTrainingSwiper)();
    (0, _swiperReviews.initReviewsSwiper)();
    (0, _swiperAdvantages.initAdvantagesSwiper)();
    (0, _swiperGallery.initGallerySwiper)();
    (0, _inputValidate.inputValidate)();
  });
});

},{"./modules/input-validate/input-validate":2,"./modules/leaflet/leaflet":3,"./modules/nav-toggle/nav-toggle":4,"./modules/scroll/scroll":5,"./modules/swiper-advantages/swiper-advantages":6,"./modules/swiper-gallery/swiper-gallery":7,"./modules/swiper-hero/swiper-hero":8,"./modules/swiper-reviews/swiper-reviews":9,"./modules/swiper-tours/swiper-tours":10,"./modules/swiper-training/swiper-training":11,"./modules/youtube-video/youtube-video":12,"./utils/ios-vh-fix":14}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inputValidate = inputValidate;
var questionsForm = document.querySelector('.questions__form');
var inputName = questionsForm.querySelector('[type="text"]');
var inputTel = questionsForm.querySelector('[type="tel"]');
var submitButton = questionsForm.querySelector('[type="submit"]');
function resetInputs() {
  inputName.value = '';
  inputTel.value = '';
}
function inputValidate() {
  submitButton.addEventListener('click', function () {
    if (!inputName.value) {
      inputName.classList.add('questions__input--invalid');
    } else {
      inputName.classList.remove('questions__input--invalid');
    }
    if (!inputTel.value) {
      inputTel.classList.add('questions__input--invalid');
    } else {
      inputTel.classList.remove('questions__input--invalid');
    }
    if (!inputName.value || !inputTel.value) {
      event.preventDefault();
    }
    if (inputName.value && inputTel.value) {
      setTimeout(resetInputs, 500);
    }
  });
  inputName.oninput = function () {
    inputName.value = inputName.value.replace(/[^a-zA-Zа-яА-Я,' ',-]/g, '');
    if (inputName.value.length < 1) {
      inputName.classList.add('questions__input--invalid');
    } else {
      inputName.classList.remove('questions__input--invalid');
    }
  };
  inputTel.oninput = function () {
    inputTel.value = inputTel.value.replace(/[^0-9,+,(),-]/g, '');
    if (inputTel.value.length < 1) {
      inputTel.classList.add('questions__input--invalid');
    } else {
      inputTel.classList.remove('questions__input--invalid');
    }
  };
}

},{}],3:[function(require,module,exports){
"use strict";

function initLeaflet() {
  var map = L.map('map').setView({
    lat: 55.81638831185497,
    lng: 37.63691973318728
  }, 14);
  map.scrollWheelZoom.disable();
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);
  var mainPinIcon = L.icon({
    iconUrl: './img/svg/icon-baloon-filled.svg',
    iconSize: [38, 50],
    iconAnchor: [18, 45]
  });
  var marker = L.marker({
    lat: 55.81638831185497,
    lng: 37.63691973318728
  }, {
    icon: mainPinIcon
  });
  marker.addTo(map);
}
var options = {
  rootMargin: '200px',
  threshold: 0
};
var trueCallback = function trueCallback(entries, observer) {
  entries.forEach(function (entry) {
    var isIntersecting = entry.isIntersecting;
    if (isIntersecting) {
      initLeaflet();
      observer.unobserve(entry.target);
    }
  });
};
var observer = new IntersectionObserver(trueCallback, options);
var target = document.querySelector('.contacts');
observer.observe(target);

// function initLeaflet() {

//   const map = L.map('map')
//     .setView({
//       lat: 55.81638831185497,
//       lng: 37.63691973318728,
//     }, 14);
//     map.scrollWheelZoom.disable();

//   L.tileLayer(
//     'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
//     {
//       attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
//     },
//   ).addTo(map);

//   const mainPinIcon = L.icon({
//     iconUrl: './img/svg/icon-baloon-filled.svg',
//     iconSize: [38, 50],
//     iconAnchor: [18, 45],
//   });

//   const marker = L.marker(
//     {
//       lat: 55.81638831185497,
//       lng: 37.63691973318728,
//     },
//     {
//       icon: mainPinIcon,
//     },
//   );

//   marker.addTo(map);

// }

// export {initLeaflet};

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.closeMenu = closeMenu;
var header = document.querySelector('.header__main-header');
var logoWrapper = document.querySelector('.header__logo-wrapper');
var headerNav = document.querySelector('.header__nav');
var navToggle = document.querySelector('.nav__toggle');
var navWpapper = document.querySelector('.nav__wrapper');
var navList = document.querySelector('.nav__list');
var untouchableBlock = document.querySelector('.header__untouchable-block');
var body = document.getElementById('body');
header.classList.remove('header__main-header--nojs');
logoWrapper.classList.remove('header__logo-wrapper--invert');
headerNav.classList.remove('nav--nojs');
navList.classList.remove('nav__list--nojs');
function openMenu() {
  header.classList.add('header__main-header--opened');
  logoWrapper.classList.add('header__logo-wrapper--invert');
  headerNav.classList.remove('nav--closed');
  headerNav.classList.add('nav--opened');
  navWpapper.classList.remove('nav__wrapper--closed');
  body.classList.add('unscrolling');
  untouchableBlock.classList.add('header__untouchable-block--show');
}
function closeMenu() {
  header.classList.remove('header__main-header--opened');
  logoWrapper.classList.remove('header__logo-wrapper--invert');
  headerNav.classList.add('nav--closed');
  headerNav.classList.remove('nav--opened');
  navWpapper.classList.add('nav__wrapper--closed');
  body.classList.remove('unscrolling');
  untouchableBlock.classList.remove('header__untouchable-block--show');
}
navToggle.addEventListener('click', function () {
  if (headerNav.classList.contains('nav--closed')) {
    openMenu();
    untouchableBlock.addEventListener('click', function () {
      closeMenu();
      untouchableBlock.removeEventListener('click', function () {});
    });
  } else {
    closeMenu();
  }
});

},{}],5:[function(require,module,exports){
"use strict";

var _navToggle = require("../nav-toggle/nav-toggle");
var tours = document.getElementById('tours');
var toursLink = document.getElementById('tours-link');
toursLink.addEventListener('click', function () {
  tours.scrollIntoView({
    behavior: 'smooth'
  }, {
    block: 'center',
    inline: 'center'
  });
  (0, _navToggle.closeMenu)();
});
var training = document.getElementById('training');
var trainingLink = document.getElementById('training-link');
trainingLink.addEventListener('click', function () {
  training.scrollIntoView({
    behavior: 'smooth'
  }, {
    block: 'center',
    inline: 'center'
  });
  (0, _navToggle.closeMenu)();
});
var aboutus = document.getElementById('aboutus');
var aboutusLink = document.getElementById('aboutus-link');
aboutusLink.addEventListener('click', function () {
  aboutus.scrollIntoView({
    behavior: 'smooth'
  }, {
    block: 'center',
    inline: 'center'
  });
  (0, _navToggle.closeMenu)();
});
var reviews = document.getElementById('reviews');
var reviewsLink = document.getElementById('reviews-link');
reviewsLink.addEventListener('click', function () {
  reviews.scrollIntoView({
    behavior: 'smooth'
  }, {
    block: 'center',
    inline: 'center'
  });
  (0, _navToggle.closeMenu)();
});
var gallery = document.getElementById('gallery');
var galleryLink = document.getElementById('gallery-link');
galleryLink.addEventListener('click', function () {
  gallery.scrollIntoView({
    behavior: 'smooth'
  }, {
    block: 'center',
    inline: 'center'
  });
  (0, _navToggle.closeMenu)();
});
var contacts = document.getElementById('contacts');
var contactsLink = document.getElementById('contacts-link');
contactsLink.addEventListener('click', function () {
  contacts.scrollIntoView({
    behavior: 'smooth'
  }, {
    block: 'center',
    inline: 'center'
  });
  (0, _navToggle.closeMenu)();
});

},{"../nav-toggle/nav-toggle":4}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initAdvantagesSwiper = initAdvantagesSwiper;
var advantagesButtons = document.querySelector('.advantages__button-container');
var sswiper = document.querySelector('.advantages__swiper');
var advantagesLink = document.querySelector('.advantages__more-link');
function initAdvantagesSwiper() {
  if (window.innerWidth >= 1200) {
    advantagesButtons.classList.remove('advantages__button-container--nojs');
    sswiper.classList.remove('advantages__swiper--nojs');
    advantagesLink.classList.add('advantages__more-link--nojs');
    var advantagesSwiper = new Swiper('.advantages__swiper', {
      // Стрелки переключения слайдов
      navigation: {
        nextEl: '.advantages__button--next',
        prevEl: '.advantages__button--prev'
      },
      watchSlidesProgress: true,
      direction: 'horizontal',
      slidesPerView: 1,
      loop: true,
      spacebetween: 0,
      allowTouchMove: true,
      breakpoints: {
        1200: {
          slidesPerView: 3,
          spaceBetween: 30,
          allowTouchMove: false
        }
      }
    });
    return advantagesSwiper;
  }
}

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initGallerySwiper = initGallerySwiper;
var galleryButtons = document.querySelector('.gallery__button-container');
var galleryLink = document.querySelector('.gallery__more-link');
function initGallerySwiper() {
  galleryButtons.classList.remove('gallery__button-container--nojs');
  galleryLink.classList.add('gallery__more-link--nojs');
  var gallerySwiper = new Swiper('.gallery__swiper', {
    // Стрелки переключения слайдов
    navigation: {
      nextEl: '.gallery__button--next',
      prevEl: '.gallery__button--prev'
    },
    watchSlidesProgress: true,
    direction: 'horizontal',
    slidesPerView: 'auto',
    loop: false,
    spacebetween: 3,
    allowTouchMove: true,
    breakpoints: {
      768: {
        spaceBetween: 5,
        slidesPerView: 'auto'
      },
      1200: {
        slidesPerView: 'auto',
        spaceBetween: 5,
        allowTouchMove: false
      }
    }
  });
  return gallerySwiper;
}

},{}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initHeroSwiper = initHeroSwiper;
function initHeroSwiper() {
  var heroSwiper = new Swiper('.hero__swiper', {
    // Стрелки переключения слайдов
    navigation: {
      nextEl: '.hero__button-next',
      prevEl: '.hero__button-prev'
    },
    pagination: {
      el: '.swiper-pagination',
      clickable: true
    },
    watchSlidesProgress: true,
    direction: 'horizontal',
    slidesPerView: 1,
    loop: true,
    spacebetween: 0,
    allowTouchMove: true,
    breakpoints: {
      1200: {
        allowTouchMove: false
      }
    }
  });
  return heroSwiper;
}

},{}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initReviewsSwiper = initReviewsSwiper;
var reviewsButtons = document.querySelector('.reviews__button-container');
var reviewsLink = document.querySelector('.reviews__more-link');
var reviewSlide = document.querySelector('.reviews__slide--nojs');
function initReviewsSwiper() {
  reviewsButtons.classList.remove('reviews__button-container--nojs');
  reviewsLink.classList.add('reviews__more-link--nojs');
  reviewSlide.classList.remove('reviews__slide--nojs');
  var reviewsSwiper = new Swiper('.reviews__swiper', {
    // Стрелки переключения слайдов
    navigation: {
      nextEl: '.reviews__button--next',
      prevEl: '.reviews__button--prev'
    },
    watchSlidesProgress: true,
    direction: 'horizontal',
    slidesPerView: 1,
    loop: false,
    spacebetween: 0,
    allowTouchMove: true,
    breakpoints: {
      768: {
        slidesPerView: 'auto',
        spaceBetween: 30
      },
      1200: {
        spaceBetween: 30,
        slidesPerView: 'auto',
        allowTouchMove: false
      }
    }
  });
  return reviewsSwiper;
}

},{}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initToursSwiper = initToursSwiper;
var toursButtons = document.querySelector('.tours__button-container');
while (document.querySelector('.tour--nojs') !== null) {
  document.querySelector('.tour--nojs').classList.remove('tour--nojs');
}
function initToursSwiper() {
  toursButtons.classList.remove('tours__button-container--nojs');
  var toursSwiper = new Swiper('.tours__swiper', {
    // Стрелки переключения слайдов
    navigation: {
      nextEl: '.tours__button--next',
      prevEl: '.tours__button--prev'
    },
    watchSlidesProgress: true,
    direction: 'horizontal',
    slidesPerView: 1,
    loop: false,
    spacebetween: 0,
    allowTouchMove: true,
    breakpoints: {
      768: {
        slidesPerView: 2,
        spaceBetween: 19
      },
      1200: {
        allowTouchMove: false,
        slidesPerView: 3,
        spaceBetween: 30
      }
    }
  });
  return toursSwiper;
}

},{}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initTrainingSwiper = initTrainingSwiper;
var trainingButtons = document.querySelector('.training__button-container');
var trainingLink = document.querySelector('.training__more-link');
function initTrainingSwiper() {
  trainingButtons.classList.remove('training__button-container--nojs');
  trainingLink.classList.add('training__more-link--nojs');
  var trainingSwiper = new Swiper('.training__swiper', {
    // Стрелки переключения слайдов
    navigation: {
      nextEl: '.training__button--next',
      prevEl: '.training__button--prev'
    },
    watchSlidesProgress: true,
    direction: 'horizontal',
    slidesPerView: 1,
    loop: false,
    spacebetween: 0,
    allowTouchMove: true,
    breakpoints: {
      768: {
        slidesPerView: 3,
        spaceBetween: 30
      },
      1200: {
        allowTouchMove: false,
        slidesPerView: 4,
        spaceBetween: 30
      }
    }
  });
  return trainingSwiper;
}

},{}],12:[function(require,module,exports){
"use strict";

var iframe = document.querySelector('.hero__iframe-wrapper');
iframe.remove();
var poster = document.querySelector('.hero__poster-wrapper');
poster.classList.remove('hero__poster-wrapper--nojs');

// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement('script');
tag.src = 'https://www.youtube.com/iframe_api';
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
//

var videoWrapper = document.querySelector('.hero__video-wrapper');
videoWrapper.addEventListener('click', function () {
  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '317',
      width: '482',
      videoId: '9TZXsZItgdw',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    event.target.setVolume(1);
    event.target.playVideo();
  }

  // 5. The API calls this function when the player's state changes.
  //    The function indicates that when playing a video (state=1),
  //    the player should play for six seconds and then stop.
  var done = false;
  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.PLAYING && !done) {
      setTimeout(stopVideo, 30000);
      done = true;
    }
  }
  function stopVideo() {
    player.stopVideo();
  }
  onYouTubeIframeAPIReady();
});

},{}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosChecker = void 0;
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};
exports.iosChecker = iosChecker;

},{}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosVhFix = void 0;
var _iosChecker = require("./ios-checker");
var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0, _iosChecker.iosChecker)()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};
exports.iosVhFix = iosVhFix;

},{"./ios-checker":13}]},{},[1])


//# sourceMappingURL=main.min.js.map
